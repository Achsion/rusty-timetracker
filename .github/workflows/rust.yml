name: Compile and Release

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.platform.release_for }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            target: x86_64-unknown-linux-gnu
            bin: rusty-timetracker
            name: rusty-timetracker-Linux-x86_64
          - release_for: Windows-x86_64
            target: x86_64-pc-windows-gnu
            bin: rusty-timetracker.exe
            name: rusty-timetracker-Windows-x86_64.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install dependencies
        run: rustup target add ${{ matrix.platform.target }}
      - name: Compile for ${{ matrix.platform.release_for }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=${{ matrix.platform.target }} --release --all-features
      - name: Upload ${{ matrix.platform.release_for }} artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.name }}
          path: ./target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
#      - name: Publish GitHub release
#        uses: softprops/action-gh-release@v1
#        with:
#          draft: true
#          files: "timetracker-*"
#          body_path: Changes.md
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        if: startsWith( github.ref, 'refs/tags/v' )
